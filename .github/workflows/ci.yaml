name: CI

on:
  workflow_call:
    inputs:
      directory:
        description: >
          The directory in which a Visual Studio Solution file is to be searched for.
          Do not add a trailing slash.
        type: string
        required: false
        default: ''
    secrets:
      SONAR_TOKEN:
        required: true

env:
  BUILD_CONFIG: Debug

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          # Retrieve the preceding commit to enable 'changed-files' to create a diff.
          fetch-depth: 2

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@57d9664f8e2aa45f26bcb59095f99aa47ae8e90d
        # TODO: This step should honor the directory input
      
      - name: Find Solution
        id: find
        uses: flobernd/actions/dotnet/find-solution@master
        with:
          directory: ${{ inputs.directory }}

      - name: .NET Setup
        uses: flobernd/actions/dotnet/setup@master
        with:
          # Use version defined in 'global.json'
          dotnet-version: ''
          disable-problem-matcher: true

      - name: .NET Restore
        uses: flobernd/actions/dotnet/restore@master
        with:
          workspace: ${{ steps.find.outputs.solution }}
          cache-key: ${{ hashFiles('**/packages.lock.json') }}

      # TODO: Add additional generic '.editorconfig' linting, e.g. for `*.csproj` files

      - name: .NET Lint
        uses: flobernd/actions/dotnet/lint@master
        with:
          workspace: ${{ steps.find.outputs.solution }}
          # This list is empty for the initial commit. NET Lint will lint all files in this case.
          include: ${{ steps.changed-files.outputs.all_changed_files }}

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          # Required by NBGV
          fetch-depth: 0

      - name: Find Solution
        id: find
        uses: flobernd/actions/dotnet/find-solution@master
        with:
          directory: ${{ inputs.directory }}

      - name: Filter Solution
        uses: flobernd/actions/dotnet/filter-solution@master
        with:
          solution: ${{ steps.find.outputs.solution }}
          pattern: |
            **/*.Test*.csproj
          output: ./Tests.slnf
        # TODO: This step should honor the directory input for outputting the Solution Filter

      - name: .NET Setup
        uses: flobernd/actions/dotnet/setup@master
        with:
          # Use version defined in 'global.json'
          dotnet-version: ''
          disable-problem-matcher: true

      - name: .NET Restore
        uses: flobernd/actions/dotnet/restore@master
        with:
          workspace: ./Tests.slnf
          cache-key: ${{ hashFiles('**/packages.lock.json') }}
        # TODO: This step should honor the directory input for hashing

      - name: .NET Build
        uses: flobernd/actions/dotnet/build@master
        with:
          workspace: ./Tests.slnf
          configuration: ${{ env.BUILD_CONFIG }}

      - name: .NET Test
        uses: flobernd/actions/dotnet/test@master
        with:
          projects: '**/*.Test*.csproj'
          fail-on-error: false
          log-results: true
          collect-coverage: false
          maxdop: 4
        # TODO: This step should honor the directory input for test discovery

      - name: Generate Test Report
        uses: zyactions/test-reporter@main
        with:
          name: Test Results
          path: '**/TestResults/*.trx'
          reporter: dotnet-trx
          fail-on-error: true
          only-summary: false
          max-annotations: 30
  
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0
        with:
          # Required by NBGV and SonarCloud scanner
          fetch-depth: 0

      - name: Find Solution
        id: find
        uses: flobernd/actions/dotnet/find-solution@master
        with:
          directory: ${{ inputs.directory }}

      - name: .NET Setup
        uses: flobernd/actions/dotnet/setup@master
        with:
          # Use version defined in 'global.json'
          dotnet-version: ''
          disable-problem-matcher: false

      - name: .NET Restore
        uses: flobernd/actions/dotnet/restore@master
        with:
          workspace: ${{ steps.find.outputs.solution }}
          cache-key: ${{ hashFiles('**/packages.lock.json') }}
        # TODO: This step should honor the directory input for hashing

      - name: SonarCloud Names
        id: sonarcloud-names
        run: |
          REPOSITORY=${GITHUB_REPOSITORY#*/}
          echo "organization=${GITHUB_REPOSITORY_OWNER}" >> $GITHUB_OUTPUT
          echo "project-key=${GITHUB_REPOSITORY_OWNER}_${REPOSITORY}" >> $GITHUB_OUTPUT
          echo "ORG = ${GITHUB_REPOSITORY_OWNER}"
          echo "KEY = ${GITHUB_REPOSITORY_OWNER}_${REPOSITORY}"

      - name: SonarCloud Prepare
        uses: flobernd/actions/sonarcloud/prepare@master

      - name: SonarCloud Begin
        uses: flobernd/actions/sonarcloud/begin@master
        with:
          sonar-organization: ${{ steps.sonarcloud-names.outputs.organization }}
          sonar-project-key: ${{ steps.sonarcloud-names.outputs.project-key }}
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: .NET Build
        uses: flobernd/actions/dotnet/build@master
        with:
          workspace: ${{ steps.find.outputs.solution }}
          configuration: ${{ env.BUILD_CONFIG }}

      - name: .NET Test
        uses: flobernd/actions/dotnet/test@master
        with:
          projects: '**/*.Test*.csproj'
          log-results: true
          collect-coverage: true
          maxdop: 4
        # TODO: This step should honor the directory input for test discovery

      - name: SonarCloud End
        uses: flobernd/actions/sonarcloud/end@master
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
